{"ast":null,"code":"const _excluded = [\"label\", \"id\", \"helpText\", \"error\", \"success\", \"defaultLabel\", \"type\", \"placeholder\", \"name\", \"value\", \"onBlur\", \"onFocus\", \"onChange\", \"className\", \"errorMessage\", \"successMessage\"];\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\deadline\\\\coming\\\\components\\\\TextField\\\\TextField.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'react-icons-kit';\nimport { ic_check_circle } from 'react-icons-kit/md/ic_check_circle';\nimport { ic_cancel } from 'react-icons-kit/md/ic_cancel';\nimport Fade from 'react-reveal/Fade';\nimport HeadShake from 'react-reveal/HeadShake';\nimport styled from 'styled-components';\nimport { FormattedMessage } from 'react-intl'; //styled-components for stylings\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FieldWrapper = styled.div.withConfig({\n  displayName: \"TextField__FieldWrapper\",\n  componentId: \"sc-1qgjuys-0\"\n})([\"position:relative;@media (max-width:600px){width:100%;}\"]);\nconst Label = styled.label.withConfig({\n  displayName: \"TextField__Label\",\n  componentId: \"sc-1qgjuys-1\"\n})([\"\"]);\nconst HelpText = styled.span.withConfig({\n  displayName: \"TextField__HelpText\",\n  componentId: \"sc-1qgjuys-2\"\n})([\"\"]);\nconst InputFeedback = styled.div.withConfig({\n  displayName: \"TextField__InputFeedback\",\n  componentId: \"sc-1qgjuys-3\"\n})([\"color:\", \";position:absolute;border-radius:5px;background-color:\", \";font-size:14px;font-family:'Roboto';color:rgb(250,251,255);left:\", \";bottom:-60px;box-shadow:\", \";padding:6px 16px;transition:all 250ms linear;width:90%;text-align:center;z-index:99;@media (max-width:600px){left:5%;bottom:-110px;}i{position:absolute;top:4px;}span{padding-left:20px;padding-right:20px;}\"], props => props.success ? 'rgb(250, 251, 255)' : 'rgb(250, 251, 255)', props => props.success ? 'rgb(14, 158, 105)' : 'rgb(246, 86, 86)', props => props.success ? '17%' : '0', props => props.success ? '0px 5px 18.8px 1.2px rgba(17, 182, 122, 0.5)' : '0px 5px 18.8px 1.2px rgba(246, 86, 86, 0.35)');\nconst Input = styled.input.withConfig({\n  displayName: \"TextField__Input\",\n  componentId: \"sc-1qgjuys-4\"\n})([\"background-color:rgb(239,245,249);border:transparent;height:48px;border-radius:28px;padding-left:30px;width:316px;padding-right:30px;@media (max-width:600px){width:100%;}&::placeholder{font-size:15px;font-family:'Roboto';color:rgb(142,147,154);}&:focus{outline:none;}\"]); // react-components\n\nexport default function TextField(_ref) {\n  let {\n    label,\n    id,\n    helpText,\n    error,\n    success,\n    defaultLabel,\n    type,\n    placeholder,\n    name,\n    value,\n    onBlur,\n    onFocus,\n    onChange,\n    className,\n    errorMessage,\n    successMessage\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/_jsxDEV(FieldWrapper, {\n    className: `field-wrapper ${className ? className : ''}`.trim(),\n    children: [label && /*#__PURE__*/_jsxDEV(Label, {\n      htmlFor: id,\n      children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n        id: label,\n        defaultMessage: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormattedMessage, {\n      id: placeholder,\n      defaultMessage: placeholder,\n      children: placeholder => /*#__PURE__*/_jsxDEV(Input, _objectSpread({\n        placeholder: placeholder,\n        id: id,\n        type: type,\n        name: name,\n        value: value,\n        onChange: onChange,\n        autoComplete: \"off\"\n      }, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), helpText && /*#__PURE__*/_jsxDEV(HelpText, {\n      children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n        id: helpText,\n        defaultMessage: helpText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(HeadShake, {\n      duration: 1000,\n      children: /*#__PURE__*/_jsxDEV(InputFeedback, {\n        error: true,\n        className: \"feedback\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          icon: ic_cancel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"errorMsg\",\n          defaultMessage: \"errorMessage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(Fade, {\n      bottom: true,\n      duration: 2000,\n      children: /*#__PURE__*/_jsxDEV(InputFeedback, {\n        success: true,\n        className: \"feedback\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          icon: ic_check_circle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: successMessage,\n          defaultMessage: \"successMessage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n/** Inout prop type checking. */\n\nTextField.propTypes = {\n  /** className of the Input component. */\n  className: PropTypes.string,\n\n  /** Set input label value. */\n  label: PropTypes.string,\n\n  /** The input value, required for a controlled component. */\n  value: PropTypes.string,\n\n  /** Set input type of the input element. Default type is text. */\n  type: PropTypes.oneOf(['text', 'email', 'number', 'password']),\n\n  /**\r\n   * @ignore\r\n   */\n  onBlur: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onFocus: PropTypes.func,\n\n  /**\r\n   * Callback fired when the value is changed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * You can pull out the new value by accessing `event.target.value`.\r\n   */\n  onChange: PropTypes.func\n};\n/** Inout default type. */\n\nInput.defaultProps = {\n  type: 'text'\n};","map":{"version":3,"sources":["C:/Users/Owner/Desktop/deadline/coming/components/TextField/TextField.js"],"names":["React","PropTypes","Icon","ic_check_circle","ic_cancel","Fade","HeadShake","styled","FormattedMessage","FieldWrapper","div","Label","label","HelpText","span","InputFeedback","props","success","Input","input","TextField","id","helpText","error","defaultLabel","type","placeholder","name","value","onBlur","onFocus","onChange","className","errorMessage","successMessage","trim","propTypes","string","oneOf","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from 'react-icons-kit';\r\nimport { ic_check_circle } from 'react-icons-kit/md/ic_check_circle';\r\nimport { ic_cancel } from 'react-icons-kit/md/ic_cancel';\r\nimport Fade from 'react-reveal/Fade';\r\nimport HeadShake from 'react-reveal/HeadShake';\r\nimport styled from 'styled-components';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n//styled-components for stylings\r\nconst FieldWrapper = styled.div`\r\n  position: relative;\r\n  @media (max-width: 600px) {\r\n    width: 100%;\r\n  }\r\n`;\r\nconst Label = styled.label``;\r\nconst HelpText = styled.span``;\r\nconst InputFeedback = styled.div`\r\n  color: ${props =>\r\n    props.success ? 'rgb(250, 251, 255)' : 'rgb(250, 251, 255)'};\r\n  position: absolute;\r\n  border-radius: 5px;\r\n  background-color: ${props =>\r\n    props.success ? 'rgb(14, 158, 105)' : 'rgb(246, 86, 86)'};\r\n  font-size: 14px;\r\n  font-family: 'Roboto';\r\n  color: rgb(250, 251, 255);\r\n  left: ${props => (props.success ? '17%' : '0')};\r\n  bottom: -60px;\r\n  box-shadow: ${props =>\r\n    props.success\r\n      ? '0px 5px 18.8px 1.2px rgba(17, 182, 122, 0.5)'\r\n      : '0px 5px 18.8px 1.2px rgba(246, 86, 86, 0.35)'};\r\n  padding: 6px 16px;\r\n  transition: all 250ms linear;\r\n  width: 90%;\r\n  text-align: center;\r\n  z-index: 99;\r\n  @media (max-width: 600px) {\r\n    left: 5%;\r\n    bottom: -110px;\r\n  }\r\n  i {\r\n    position: absolute;\r\n    top: 4px;\r\n  }\r\n  span {\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  background-color: rgb(239, 245, 249);\r\n  border: transparent;\r\n  height: 48px;\r\n  border-radius: 28px;\r\n  padding-left: 30px;\r\n  width: 316px;\r\n  padding-right: 30px;\r\n  @media (max-width: 600px) {\r\n    width: 100%;\r\n  }\r\n  &::placeholder {\r\n    font-size: 15px;\r\n    font-family: 'Roboto';\r\n    color: rgb(142, 147, 154);\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\n// react-components\r\nexport default function TextField({\r\n  label,\r\n  id,\r\n  helpText,\r\n  error,\r\n  success,\r\n  defaultLabel,\r\n  type,\r\n  placeholder,\r\n  name,\r\n  value,\r\n  onBlur,\r\n  onFocus,\r\n  onChange,\r\n  className,\r\n  errorMessage,\r\n  successMessage,\r\n  ...props\r\n}) {\r\n  return (\r\n    <FieldWrapper\r\n      className={`field-wrapper ${className ? className : ''}`.trim()}\r\n    >\r\n      {label && (\r\n        <Label htmlFor={id}>\r\n          <FormattedMessage id={label} defaultMessage={label} />\r\n        </Label>\r\n      )}\r\n      <FormattedMessage id={placeholder} defaultMessage={placeholder}>\r\n        {placeholder => (\r\n          <Input\r\n            placeholder={placeholder}\r\n            id={id}\r\n            type={type}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            autoComplete=\"off\"\r\n            {...props}\r\n          />\r\n        )}\r\n      </FormattedMessage>\r\n      {helpText && (\r\n        <HelpText>\r\n          <FormattedMessage id={helpText} defaultMessage={helpText} />\r\n        </HelpText>\r\n      )}\r\n      {error && (\r\n        <HeadShake duration={1000}>\r\n          <InputFeedback error className=\"feedback\">\r\n            <Icon icon={ic_cancel} />\r\n            <FormattedMessage id=\"errorMsg\" defaultMessage=\"errorMessage\" />\r\n          </InputFeedback>\r\n        </HeadShake>\r\n      )}\r\n      {success && (\r\n        <Fade bottom duration={2000}>\r\n          <InputFeedback success className=\"feedback\">\r\n            <Icon icon={ic_check_circle} />\r\n            <FormattedMessage\r\n              id={successMessage}\r\n              defaultMessage=\"successMessage\"\r\n            />\r\n          </InputFeedback>\r\n        </Fade>\r\n      )}\r\n    </FieldWrapper>\r\n  );\r\n}\r\n\r\n/** Inout prop type checking. */\r\nTextField.propTypes = {\r\n  /** className of the Input component. */\r\n  className: PropTypes.string,\r\n\r\n  /** Set input label value. */\r\n  label: PropTypes.string,\r\n\r\n  /** The input value, required for a controlled component. */\r\n  value: PropTypes.string,\r\n\r\n  /** Set input type of the input element. Default type is text. */\r\n  type: PropTypes.oneOf(['text', 'email', 'number', 'password']),\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onBlur: PropTypes.func,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onFocus: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the value is changed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * You can pull out the new value by accessing `event.target.value`.\r\n   */\r\n  onChange: PropTypes.func,\r\n};\r\n\r\n/** Inout default type. */\r\nInput.defaultProps = {\r\n  type: 'text',\r\n};\r\n"]},"metadata":{},"sourceType":"module"}