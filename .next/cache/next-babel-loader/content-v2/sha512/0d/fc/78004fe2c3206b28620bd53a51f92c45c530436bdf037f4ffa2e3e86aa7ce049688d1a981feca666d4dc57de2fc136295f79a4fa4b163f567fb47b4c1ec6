{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\deadline\\\\coming\\\\components\\\\ContactForm\\\\ContactForm.js\";\nimport React, { useState } from 'react';\nimport useTimeout from '@deadline/common/hooks/useTimeout';\nimport TextField from '../TextField/TextField';\nimport Button from '../Button/';\nimport Loader from '../Loader';\nimport { Form } from './ConatctForm.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContactForm() {\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const {\n    0: success,\n    1: setSuccess\n  } = useState(false);\n  const {\n    0: pending,\n    1: setPending\n  } = useState(false);\n  const {\n    start\n  } = useTimeout(() => {\n    if (error) setError(false);\n    if (success) setSuccess(false);\n  }, 3500);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setPending(true); // const response = await fetch(\n    //   'https://api.sendgrid.com/v3/marketing/contacts',\n    //   {\n    //     headers: {\n    //       Accept: 'application/json',\n    //       'Content-Type': 'application/json',\n    //       Authorization: `Bearer ${process.env.SENDGRID_API_KEY}`,\n    //     },\n    //     method: 'PUT',\n    //     body: JSON.stringify({\n    //       list_ids: [],\n    //       contacts: [{ email: value }],\n    //     }),\n    //   }\n    // );\n    // const data = await response.json();\n    // console.log(data, 'data');\n    // if (data.job_id) {\n    //   setPending(false);\n    //   setSuccess(true);\n    //   start();\n    //   setValue('');\n    // } else if (data.errors.length) {\n    //   setPending(false);\n    //   setError(true);\n    //   start();\n    // }\n\n    console.log('contact form');\n    setTimeout(function () {\n      setPending(false);\n      setSuccess(true);\n      setError(false);\n      start();\n      setValue('');\n    }, 2000);\n  };\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"user_email\",\n      placeholder: \"placeholder\",\n      type: \"email\",\n      required: \"required\",\n      value: value,\n      error: error,\n      errorMessage: \"errorMessage\",\n      successMessage: \"successMsg\",\n      success: success,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      title: \"buttonText\",\n      isLoading: pending,\n      loader: /*#__PURE__*/_jsxDEV(Loader, {\n        loaderColor: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Owner/Desktop/deadline/coming/components/ContactForm/ContactForm.js"],"names":["React","useState","useTimeout","TextField","Button","Loader","Form","ContactForm","value","setValue","error","setError","success","setSuccess","pending","setPending","start","handleSubmit","e","preventDefault","console","log","setTimeout","handleChange","event","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,IAAT,QAAqB,qBAArB;;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACS,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACa,OAAD;AAAA,OAAUC;AAAV,MAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAYd,UAAU,CAAC,MAAM;AACjC,QAAIQ,KAAJ,EAAWC,QAAQ,CAAC,KAAD,CAAR;AACX,QAAIC,OAAJ,EAAaC,UAAU,CAAC,KAAD,CAAV;AACd,GAH2B,EAGzB,IAHyB,CAA5B;;AAIA,QAAMI,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,UAAU,CAAC,IAAD,CAAV,CAF8B,CAG9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAK,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEAC,IAAAA,UAAU,CAAC,YAAW;AACpBP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAK,MAAAA,KAAK;AACLP,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KANS,EAMP,IANO,CAAV;AAOD,GAxCD;;AA0CA,QAAMc,YAAY,GAAGC,KAAK,IAAI;AAC5Bf,IAAAA,QAAQ,CAACe,KAAK,CAACC,MAAN,CAAajB,KAAd,CAAR;AACD,GAFD;;AAGA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAES,YAAhB;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,EAAE,EAAC,YADL;AAEE,MAAA,WAAW,EAAC,aAFd;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,QAAQ,EAAC,UAJX;AAKE,MAAA,KAAK,EAAET,KALT;AAME,MAAA,KAAK,EAAEE,KANT;AAOE,MAAA,YAAY,EAAC,cAPf;AAQE,MAAA,cAAc,EAAC,YARjB;AASE,MAAA,OAAO,EAAEE,OATX;AAUE,MAAA,QAAQ,EAAEW;AAVZ;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAC,YAFR;AAGE,MAAA,SAAS,EAAET,OAHb;AAIE,MAAA,MAAM,eAAE,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AAJV;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD","sourcesContent":["import React, { useState } from 'react';\r\nimport useTimeout from '@deadline/common/hooks/useTimeout';\r\nimport TextField from '../TextField/TextField';\r\nimport Button from '../Button/';\r\nimport Loader from '../Loader';\r\nimport { Form } from './ConatctForm.style';\r\n\r\nexport default function ContactForm() {\r\n  const [value, setValue] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [pending, setPending] = useState(false);\r\n  const { start } = useTimeout(() => {\r\n    if (error) setError(false);\r\n    if (success) setSuccess(false);\r\n  }, 3500);\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setPending(true);\r\n    // const response = await fetch(\r\n    //   'https://api.sendgrid.com/v3/marketing/contacts',\r\n    //   {\r\n    //     headers: {\r\n    //       Accept: 'application/json',\r\n    //       'Content-Type': 'application/json',\r\n    //       Authorization: `Bearer ${process.env.SENDGRID_API_KEY}`,\r\n    //     },\r\n    //     method: 'PUT',\r\n    //     body: JSON.stringify({\r\n    //       list_ids: [],\r\n    //       contacts: [{ email: value }],\r\n    //     }),\r\n    //   }\r\n    // );\r\n    // const data = await response.json();\r\n    // console.log(data, 'data');\r\n    // if (data.job_id) {\r\n    //   setPending(false);\r\n    //   setSuccess(true);\r\n    //   start();\r\n    //   setValue('');\r\n    // } else if (data.errors.length) {\r\n    //   setPending(false);\r\n    //   setError(true);\r\n    //   start();\r\n    // }\r\n\r\n    console.log('contact form');\r\n\r\n    setTimeout(function() {\r\n      setPending(false);\r\n      setSuccess(true);\r\n      setError(false);\r\n      start();\r\n      setValue('');\r\n    }, 2000);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setValue(event.target.value);\r\n  };\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <TextField\r\n        id=\"user_email\"\r\n        placeholder=\"placeholder\"\r\n        type=\"email\"\r\n        required=\"required\"\r\n        value={value}\r\n        error={error}\r\n        errorMessage=\"errorMessage\"\r\n        successMessage=\"successMsg\"\r\n        success={success}\r\n        onChange={handleChange}\r\n      />\r\n      <Button\r\n        type=\"submit\"\r\n        title=\"buttonText\"\r\n        isLoading={pending}\r\n        loader={<Loader loaderColor=\"white\" />}\r\n      />\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}