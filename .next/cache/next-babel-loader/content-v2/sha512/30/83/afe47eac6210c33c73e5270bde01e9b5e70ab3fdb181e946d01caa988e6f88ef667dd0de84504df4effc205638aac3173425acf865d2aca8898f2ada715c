{"ast":null,"code":"import { useEffect, useRef } from 'react';\nexport const on = (obj, ...args) => obj.addEventListener(...args);\nexport const off = (obj, ...args) => obj.removeEventListener(...args);\nconst defaultEvents = ['mousedown', 'touchstart'];\n\nconst useOutsideClick = (ref, onOutsideClick, events = defaultEvents) => {\n  const savedCallback = useRef(onOutsideClick);\n  useEffect(() => {\n    savedCallback.current = onOutsideClick;\n  }, [onOutsideClick]);\n  useEffect(() => {\n    const handler = event => {\n      const {\n        current: el\n      } = ref;\n      el && !el.contains(event.target) && savedCallback.current(event);\n    };\n\n    for (const eventName of events) {\n      on(document, eventName, handler);\n    }\n\n    return () => {\n      for (const eventName of events) {\n        off(document, eventName, handler);\n      }\n    };\n  }, [events, ref]);\n};\n\nexport default useOutsideClick;","map":{"version":3,"sources":["C:/Users/Owner/Desktop/deadline/coming/common/hooks/useClickOutside.js"],"names":["useEffect","useRef","on","obj","args","addEventListener","off","removeEventListener","defaultEvents","useOutsideClick","ref","onOutsideClick","events","savedCallback","current","handler","event","el","contains","target","eventName","document"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,OAAO,MAAMC,EAAE,GAAG,CAACC,GAAD,EAAM,GAAGC,IAAT,KAAkBD,GAAG,CAACE,gBAAJ,CAAqB,GAAGD,IAAxB,CAA7B;AAEP,OAAO,MAAME,GAAG,GAAG,CAACH,GAAD,EAAM,GAAGC,IAAT,KAAkBD,GAAG,CAACI,mBAAJ,CAAwB,GAAGH,IAA3B,CAA9B;AAEP,MAAMI,aAAa,GAAG,CAAC,WAAD,EAAc,YAAd,CAAtB;;AAEA,MAAMC,eAAe,GAAG,CAACC,GAAD,EAAMC,cAAN,EAAsBC,MAAM,GAAGJ,aAA/B,KAAiD;AACvE,QAAMK,aAAa,GAAGZ,MAAM,CAACU,cAAD,CAA5B;AACAX,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,aAAa,CAACC,OAAd,GAAwBH,cAAxB;AACD,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAGAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,OAAO,GAAGC,KAAK,IAAI;AACvB,YAAM;AAAEF,QAAAA,OAAO,EAAEG;AAAX,UAAkBP,GAAxB;AACAO,MAAAA,EAAE,IAAI,CAACA,EAAE,CAACC,QAAH,CAAYF,KAAK,CAACG,MAAlB,CAAP,IAAoCN,aAAa,CAACC,OAAd,CAAsBE,KAAtB,CAApC;AACD,KAHD;;AAIA,SAAK,MAAMI,SAAX,IAAwBR,MAAxB,EAAgC;AAC9BV,MAAAA,EAAE,CAACmB,QAAD,EAAWD,SAAX,EAAsBL,OAAtB,CAAF;AACD;;AACD,WAAO,MAAM;AACX,WAAK,MAAMK,SAAX,IAAwBR,MAAxB,EAAgC;AAC9BN,QAAAA,GAAG,CAACe,QAAD,EAAWD,SAAX,EAAsBL,OAAtB,CAAH;AACD;AACF,KAJD;AAKD,GAbQ,EAaN,CAACH,MAAD,EAASF,GAAT,CAbM,CAAT;AAcD,CAnBD;;AAqBA,eAAeD,eAAf","sourcesContent":["import { useEffect, useRef } from 'react';\r\nexport const on = (obj, ...args) => obj.addEventListener(...args);\r\n\r\nexport const off = (obj, ...args) => obj.removeEventListener(...args);\r\n\r\nconst defaultEvents = ['mousedown', 'touchstart'];\r\n\r\nconst useOutsideClick = (ref, onOutsideClick, events = defaultEvents) => {\r\n  const savedCallback = useRef(onOutsideClick);\r\n  useEffect(() => {\r\n    savedCallback.current = onOutsideClick;\r\n  }, [onOutsideClick]);\r\n  useEffect(() => {\r\n    const handler = event => {\r\n      const { current: el } = ref;\r\n      el && !el.contains(event.target) && savedCallback.current(event);\r\n    };\r\n    for (const eventName of events) {\r\n      on(document, eventName, handler);\r\n    }\r\n    return () => {\r\n      for (const eventName of events) {\r\n        off(document, eventName, handler);\r\n      }\r\n    };\r\n  }, [events, ref]);\r\n};\r\n\r\nexport default useOutsideClick;\r\n"]},"metadata":{},"sourceType":"module"}