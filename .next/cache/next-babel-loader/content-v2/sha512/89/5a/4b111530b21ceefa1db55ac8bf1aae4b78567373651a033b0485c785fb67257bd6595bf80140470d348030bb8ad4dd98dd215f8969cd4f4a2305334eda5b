{"ast":null,"code":"const _excluded = [\"id\", \"type\", \"labelText\", \"helpText\", \"error\", \"success\", \"name\", \"onChange\", \"className\", \"value\"];\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\deadline\\\\coming\\\\components\\\\MaterialTextField\\\\MaterialTextField.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useRef } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Wrapper, FromField, FromFieldControl, Label, Input, Textarea } from './MaterialTextField.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MaterialTextField(_ref) {\n  let {\n    id,\n    type,\n    labelText,\n    helpText,\n    error,\n    success,\n    name,\n    onChange,\n    className,\n    value\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  const inputEl = useRef(null);\n  const formField = useRef(null);\n\n  const setActive = active => {\n    if (active) {\n      formField.current.classList.add('form-field--is-active');\n    } else {\n      formField.current.classList.remove('form-field--is-active');\n      inputEl.current.value === '' ? formField.current.classList.remove('form-field--is-filled') : formField.current.classList.add('form-field--is-filled');\n    }\n\n    console.log(inputEl.current.value);\n  };\n\n  const handleBlur = () => {\n    setActive(false);\n  };\n\n  const handleFocus = () => {\n    setActive(true);\n  };\n\n  const handleChange = () => {\n    // let value = inputEl.current.value;\n    // onChange(value);\n    //let inputRef = inputEl;\n    onChange(inputEl, formField);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    className: `field-wrapper ${className ? className : ''}`.trim(),\n    children: /*#__PURE__*/_jsxDEV(FromField, {\n      ref: formField,\n      children: /*#__PURE__*/_jsxDEV(FromFieldControl, {\n        className: \"form-field__control\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: id,\n          className: \"form-field__label\",\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: labelText,\n            defaultMessage: labelText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            overflow: 'hidden',\n            width: '100%'\n          },\n          children: type === 'textarea' ? /*#__PURE__*/_jsxDEV(Textarea, _objectSpread({\n            id: id,\n            type: type,\n            name: name,\n            ref: inputEl,\n            className: \"form-field__input\",\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            onChange: handleChange,\n            value: value\n          }, props), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Input, _objectSpread({\n            id: id,\n            type: type,\n            name: name,\n            ref: inputEl,\n            className: \"form-field__input\",\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            onChange: handleChange,\n            value: value\n          }, props), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Owner/Desktop/deadline/coming/components/MaterialTextField/MaterialTextField.js"],"names":["React","useRef","FormattedMessage","Wrapper","FromField","FromFieldControl","Label","Input","Textarea","MaterialTextField","id","type","labelText","helpText","error","success","name","onChange","className","value","props","inputEl","formField","setActive","active","current","classList","add","remove","console","log","handleBlur","handleFocus","handleChange","trim","position","overflow","width"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SACEC,OADF,EAEEC,SAFF,EAGEC,gBAHF,EAIEC,KAJF,EAKEC,KALF,EAMEC,QANF,QAOO,2BAPP;;AAQA,eAAe,SAASC,iBAAT,OAYZ;AAAA,MAZuC;AACxCC,IAAAA,EADwC;AAExCC,IAAAA,IAFwC;AAGxCC,IAAAA,SAHwC;AAIxCC,IAAAA,QAJwC;AAKxCC,IAAAA,KALwC;AAMxCC,IAAAA,OANwC;AAOxCC,IAAAA,IAPwC;AAQxCC,IAAAA,QARwC;AASxCC,IAAAA,SATwC;AAUxCC,IAAAA;AAVwC,GAYvC;AAAA,MADEC,KACF;;AACD,QAAMC,OAAO,GAAGpB,MAAM,CAAC,IAAD,CAAtB;AACA,QAAMqB,SAAS,GAAGrB,MAAM,CAAC,IAAD,CAAxB;;AAEA,QAAMsB,SAAS,GAAGC,MAAM,IAAI;AAC1B,QAAIA,MAAJ,EAAY;AACVF,MAAAA,SAAS,CAACG,OAAV,CAAkBC,SAAlB,CAA4BC,GAA5B,CAAgC,uBAAhC;AACD,KAFD,MAEO;AACLL,MAAAA,SAAS,CAACG,OAAV,CAAkBC,SAAlB,CAA4BE,MAA5B,CAAmC,uBAAnC;AACAP,MAAAA,OAAO,CAACI,OAAR,CAAgBN,KAAhB,KAA0B,EAA1B,GACIG,SAAS,CAACG,OAAV,CAAkBC,SAAlB,CAA4BE,MAA5B,CAAmC,uBAAnC,CADJ,GAEIN,SAAS,CAACG,OAAV,CAAkBC,SAAlB,CAA4BC,GAA5B,CAAgC,uBAAhC,CAFJ;AAGD;;AAEDE,IAAAA,OAAO,CAACC,GAAR,CAAYT,OAAO,CAACI,OAAR,CAAgBN,KAA5B;AACD,GAXD;;AAaA,QAAMY,UAAU,GAAG,MAAM;AACvBR,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAGA,QAAMS,WAAW,GAAG,MAAM;AACxBT,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAFD;;AAIA,QAAMU,YAAY,GAAG,MAAM;AACzB;AACA;AACA;AACAhB,IAAAA,QAAQ,CAACI,OAAD,EAAUC,SAAV,CAAR;AACD,GALD;;AAOA,sBACE,QAAC,OAAD;AAAS,IAAA,SAAS,EAAG,iBAAgBJ,SAAS,GAAGA,SAAH,GAAe,EAAG,EAA5C,CAA8CgB,IAA9C,EAApB;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,GAAG,EAAEZ,SAAhB;AAAA,6BACE,QAAC,gBAAD;AAAkB,QAAA,SAAS,EAAC,qBAA5B;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEZ,EAAhB;AAAoB,UAAA,SAAS,EAAC,mBAA9B;AAAA,iCACE,QAAC,gBAAD;AAAkB,YAAA,EAAE,EAAEE,SAAtB;AAAiC,YAAA,cAAc,EAAEA;AAAjD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AACE,UAAA,KAAK,EAAE;AAAEuB,YAAAA,QAAQ,EAAE,UAAZ;AAAwBC,YAAAA,QAAQ,EAAE,QAAlC;AAA4CC,YAAAA,KAAK,EAAE;AAAnD,WADT;AAAA,oBAGG1B,IAAI,KAAK,UAAT,gBACC,QAAC,QAAD;AACE,YAAA,EAAE,EAAED,EADN;AAEE,YAAA,IAAI,EAAEC,IAFR;AAGE,YAAA,IAAI,EAAEK,IAHR;AAIE,YAAA,GAAG,EAAEK,OAJP;AAKE,YAAA,SAAS,EAAC,mBALZ;AAME,YAAA,MAAM,EAAEU,UANV;AAOE,YAAA,OAAO,EAAEC,WAPX;AAQE,YAAA,QAAQ,EAAEC,YARZ;AASE,YAAA,KAAK,EAAEd;AATT,aAUMC,KAVN;AAAA;AAAA;AAAA;AAAA,kBADD,gBAcC,QAAC,KAAD;AACE,YAAA,EAAE,EAAEV,EADN;AAEE,YAAA,IAAI,EAAEC,IAFR;AAGE,YAAA,IAAI,EAAEK,IAHR;AAIE,YAAA,GAAG,EAAEK,OAJP;AAKE,YAAA,SAAS,EAAC,mBALZ;AAME,YAAA,MAAM,EAAEU,UANV;AAOE,YAAA,OAAO,EAAEC,WAPX;AAQE,YAAA,QAAQ,EAAEC,YARZ;AASE,YAAA,KAAK,EAAEd;AATT,aAUMC,KAVN;AAAA;AAAA;AAAA;AAAA;AAjBJ;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD","sourcesContent":["import React, { useRef } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport {\r\n  Wrapper,\r\n  FromField,\r\n  FromFieldControl,\r\n  Label,\r\n  Input,\r\n  Textarea,\r\n} from './MaterialTextField.style';\r\nexport default function MaterialTextField({\r\n  id,\r\n  type,\r\n  labelText,\r\n  helpText,\r\n  error,\r\n  success,\r\n  name,\r\n  onChange,\r\n  className,\r\n  value,\r\n  ...props\r\n}) {\r\n  const inputEl = useRef(null);\r\n  const formField = useRef(null);\r\n\r\n  const setActive = active => {\r\n    if (active) {\r\n      formField.current.classList.add('form-field--is-active');\r\n    } else {\r\n      formField.current.classList.remove('form-field--is-active');\r\n      inputEl.current.value === ''\r\n        ? formField.current.classList.remove('form-field--is-filled')\r\n        : formField.current.classList.add('form-field--is-filled');\r\n    }\r\n\r\n    console.log(inputEl.current.value);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setActive(false);\r\n  };\r\n  const handleFocus = () => {\r\n    setActive(true);\r\n  };\r\n\r\n  const handleChange = () => {\r\n    // let value = inputEl.current.value;\r\n    // onChange(value);\r\n    //let inputRef = inputEl;\r\n    onChange(inputEl, formField);\r\n  };\r\n\r\n  return (\r\n    <Wrapper className={`field-wrapper ${className ? className : ''}`.trim()}>\r\n      <FromField ref={formField}>\r\n        <FromFieldControl className=\"form-field__control\">\r\n          <Label htmlFor={id} className=\"form-field__label\">\r\n            <FormattedMessage id={labelText} defaultMessage={labelText} />\r\n          </Label>\r\n          <div\r\n            style={{ position: 'relative', overflow: 'hidden', width: '100%' }}\r\n          >\r\n            {type === 'textarea' ? (\r\n              <Textarea\r\n                id={id}\r\n                type={type}\r\n                name={name}\r\n                ref={inputEl}\r\n                className=\"form-field__input\"\r\n                onBlur={handleBlur}\r\n                onFocus={handleFocus}\r\n                onChange={handleChange}\r\n                value={value}\r\n                {...props}\r\n              />\r\n            ) : (\r\n              <Input\r\n                id={id}\r\n                type={type}\r\n                name={name}\r\n                ref={inputEl}\r\n                className=\"form-field__input\"\r\n                onBlur={handleBlur}\r\n                onFocus={handleFocus}\r\n                onChange={handleChange}\r\n                value={value}\r\n                {...props}\r\n              />\r\n            )}\r\n          </div>\r\n        </FromFieldControl>\r\n      </FromField>\r\n    </Wrapper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}