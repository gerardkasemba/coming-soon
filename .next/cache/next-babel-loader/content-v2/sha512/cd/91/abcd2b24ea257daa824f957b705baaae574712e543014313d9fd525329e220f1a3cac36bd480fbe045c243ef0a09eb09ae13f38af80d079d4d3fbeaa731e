{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Owner/Desktop/deadline/coming/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\deadline\\\\coming\\\\components\\\\ContactForm\\\\ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"C:/Users/Owner/Desktop/deadline/coming/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport useTimeout from '@deadline/common/hooks/useTimeout';\nimport TextField from '../TextField/TextField';\nimport Button from '../Button/';\nimport Loader from '../Loader';\nimport { Form } from './ConatctForm.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContactForm() {\n  _s();\n\n  var _useState = useState(''),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var _useState2 = useState(false),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      success = _useState3[0],\n      setSuccess = _useState3[1];\n\n  var _useState4 = useState(false),\n      pending = _useState4[0],\n      setPending = _useState4[1];\n\n  var _useTimeout = useTimeout(function () {\n    if (error) setError(false);\n    if (success) setSuccess(false);\n  }, 3500),\n      start = _useTimeout.start;\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setPending(true); // const response = await fetch(\n              //   'https://api.sendgrid.com/v3/marketing/contacts',\n              //   {\n              //     headers: {\n              //       Accept: 'application/json',\n              //       'Content-Type': 'application/json',\n              //       Authorization: `Bearer ${process.env.SENDGRID_API_KEY}`,\n              //     },\n              //     method: 'PUT',\n              //     body: JSON.stringify({\n              //       list_ids: [],\n              //       contacts: [{ email: value }],\n              //     }),\n              //   }\n              // );\n              // const data = await response.json();\n              // console.log(data, 'data');\n              // if (data.job_id) {\n              //   setPending(false);\n              //   setSuccess(true);\n              //   start();\n              //   setValue('');\n              // } else if (data.errors.length) {\n              //   setPending(false);\n              //   setError(true);\n              //   start();\n              // }\n\n              console.log('contact form');\n              setTimeout(function () {\n                setPending(false);\n                setSuccess(true);\n                setError(false);\n                start();\n                setValue('');\n              }, 2000);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"user_email\",\n      placeholder: \"placeholder\",\n      type: \"email\",\n      required: \"required\",\n      value: value,\n      error: error,\n      errorMessage: \"errorMessage\",\n      successMessage: \"successMsg\",\n      success: success,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      title: \"buttonText\",\n      style: {\n        backgroundColor: \"#e76f51\",\n        color: \"#fff\"\n      },\n      isLoading: pending,\n      loader: /*#__PURE__*/_jsxDEV(Loader, {\n        loaderColor: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactForm, \"gmC/ELfhBf2xl7kFpKLAgAc25wQ=\", false, function () {\n  return [useTimeout];\n});\n\n_c = ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["C:/Users/Owner/Desktop/deadline/coming/components/ContactForm/ContactForm.js"],"names":["React","useState","useTimeout","TextField","Button","Loader","Form","ContactForm","value","setValue","error","setError","success","setSuccess","pending","setPending","start","handleSubmit","e","preventDefault","console","log","setTimeout","handleChange","event","target","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport useTimeout from '@deadline/common/hooks/useTimeout';\r\nimport TextField from '../TextField/TextField';\r\nimport Button from '../Button/';\r\nimport Loader from '../Loader';\r\nimport { Form } from './ConatctForm.style';\r\n\r\nexport default function ContactForm() {\r\n  const [value, setValue] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [pending, setPending] = useState(false);\r\n  const { start } = useTimeout(() => {\r\n    if (error) setError(false);\r\n    if (success) setSuccess(false);\r\n  }, 3500);\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setPending(true);\r\n    // const response = await fetch(\r\n    //   'https://api.sendgrid.com/v3/marketing/contacts',\r\n    //   {\r\n    //     headers: {\r\n    //       Accept: 'application/json',\r\n    //       'Content-Type': 'application/json',\r\n    //       Authorization: `Bearer ${process.env.SENDGRID_API_KEY}`,\r\n    //     },\r\n    //     method: 'PUT',\r\n    //     body: JSON.stringify({\r\n    //       list_ids: [],\r\n    //       contacts: [{ email: value }],\r\n    //     }),\r\n    //   }\r\n    // );\r\n    // const data = await response.json();\r\n    // console.log(data, 'data');\r\n    // if (data.job_id) {\r\n    //   setPending(false);\r\n    //   setSuccess(true);\r\n    //   start();\r\n    //   setValue('');\r\n    // } else if (data.errors.length) {\r\n    //   setPending(false);\r\n    //   setError(true);\r\n    //   start();\r\n    // }\r\n\r\n    console.log('contact form');\r\n\r\n    setTimeout(function() {\r\n      setPending(false);\r\n      setSuccess(true);\r\n      setError(false);\r\n      start();\r\n      setValue('');\r\n    }, 2000);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setValue(event.target.value);\r\n  };\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <TextField\r\n        id=\"user_email\"\r\n        placeholder=\"placeholder\"\r\n        type=\"email\"\r\n        required=\"required\"\r\n        value={value}\r\n        error={error}\r\n        errorMessage=\"errorMessage\"\r\n        successMessage=\"successMsg\"\r\n        success={success}\r\n        onChange={handleChange}\r\n      />\r\n      <Button\r\n        type=\"submit\"\r\n        title=\"buttonText\"\r\n        style={{backgroundColor: \"#e76f51\", color: \"#fff\"}}\r\n        isLoading={pending}\r\n        loader={<Loader loaderColor=\"white\" />}\r\n      />\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}